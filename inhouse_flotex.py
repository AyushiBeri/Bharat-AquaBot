# -*- coding: utf-8 -*-
"""Inhouse Flotex.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eXRqXwQWmPk-KZnaCh11tchTdkhZaDcg
"""

!pip install inference

from google.colab import files

# This opens the upload dialog
uploaded = files.upload()

# Get the uploaded image file name
image_path = list(uploaded.keys())[0]

# import the inference-sdk
from inference_sdk import InferenceHTTPClient

# initialize the client
CLIENT = InferenceHTTPClient(
    api_url="https://serverless.roboflow.com",
    api_key="zfC3cyV3AZZSZQar6zMb"
)

# specify the correct image path
image_path = "leaf_2b2a8f68-d632-11ef-8a47-c109a0208e37_jpg.rf.02dcb15d6daf042662a05c60cacdad0a.jpg"

# run inference
result = CLIENT.infer(image_path, model_id="siren_ak-uoe97/2")

# print result
print(result)

import cv2
import matplotlib.pyplot as plt

# Set the image path
image_path = "leaf_2b2a8f68-d632-11ef-8a47-c109a0208e37_jpg.rf.02dcb15d6daf042662a05c60cacdad0a.jpg"

# Load the image
image = cv2.imread(image_path)
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Draw bounding boxes from inference result
for prediction in result['predictions']:
    x, y = int(prediction['x']), int(prediction['y'])
    width, height = int(prediction['width']), int(prediction['height'])
    class_name = prediction['class']

    # Calculate top-left and bottom-right corners
    x1 = x - width // 2
    y1 = y - height // 2
    x2 = x + width // 2
    y2 = y + height // 2

    # Draw rectangle and label
    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(image, class_name, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

# Display the image with bounding boxes
plt.figure(figsize=(8, 8))
plt.imshow(image)
plt.axis('off')
plt.show()

from google.colab import files

# This opens the upload dialog
uploaded = files.upload()

# Get the uploaded image file name
image_path = list(uploaded.keys())[0]

!pip install inference-sdk

from inference_sdk import InferenceHTTPClient

# Initialize the client
CLIENT = InferenceHTTPClient(
    api_url="https://serverless.roboflow.com",
    api_key="zfC3cyV3AZZSZQar6zMb"
)

# Image path after upload
image_path = "KakaoTalk_20240108_191210571_08_jpg.rf.e48c45f94f52ddffa01fd8d05f6f14a7.jpg"

# Run inference
result = CLIENT.infer(image_path, model_id="siren_ak-uoe97/2")

!pip install inference-sdk

from inference_sdk import InferenceHTTPClient

CLIENT = InferenceHTTPClient(
    api_url="https://serverless.roboflow.com",
    api_key="zfC3cyV3AZZSZQar6zMb"
)

image_path = "KakaoTalk_20240108_191210571_08_jpg.rf.e48c45f94f52ddffa01fd8d05f6f14a7.jpg"
result = CLIENT.infer(image_path, model_id="siren_ak-uoe97/2")

import cv2
import matplotlib.pyplot as plt

# Load the image
image = cv2.imread(image_path)
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Draw bounding boxes
for prediction in result['predictions']:
    x, y = int(prediction['x']), int(prediction['y'])
    width, height = int(prediction['width']), int(prediction['height'])
    class_name = prediction['class']

    x1 = x - width // 2
    y1 = y - height // 2
    x2 = x + width // 2
    y2 = y + height // 2

    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(image, class_name, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

# Show the image
plt.figure(figsize=(8, 8))
plt.imshow(image)
plt.axis('off')
plt.show()

from google.colab import files

# This opens the upload dialog
uploaded = files.upload()

# Get the uploaded image file name
image_path = list(uploaded.keys())[0]

from inference_sdk import InferenceHTTPClient

CLIENT = InferenceHTTPClient(
    api_url="https://serverless.roboflow.com",
    api_key="zfC3cyV3AZZSZQar6zMb"
)

image_path = "IMG_20230330_164917_011_jpg.rf.f4c1826a910218ab5a9283a59b15dc46.jpg"
result = CLIENT.infer(image_path, model_id="siren_ak-uoe97/2")



import cv2
import matplotlib.pyplot as plt

# Load the image
image = cv2.imread(image_path)
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Draw bounding boxes
for prediction in result['predictions']:
    x, y = int(prediction['x']), int(prediction['y'])
    width, height = int(prediction['width']), int(prediction['height'])
    class_name = prediction['class']

    x1 = x - width // 2
    y1 = y - height // 2
    x2 = x + width // 2
    y2 = y + height // 2

    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(image, class_name, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

# Show the image
plt.figure(figsize=(8, 8))
plt.imshow(image)
plt.axis('off')
plt.show()



from google.colab import files

# This opens the upload dialog
uploaded = files.upload()

# Get the uploaded image file name
image_path = list(uploaded.keys())[0]



from inference_sdk import InferenceHTTPClient

CLIENT = InferenceHTTPClient(
    api_url="https://serverless.roboflow.com",
    api_key="zfC3cyV3AZZSZQar6zMb"
)

image_path = "IMG_0468_JPG.rf.51301897547f969abba4506647007d28.jpg"
result = CLIENT.infer(image_path, model_id="siren_ak-uoe97/2")

import cv2
import matplotlib.pyplot as plt

# Load the image
image = cv2.imread(image_path)
image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Draw bounding boxes
for prediction in result['predictions']:
    x, y = int(prediction['x']), int(prediction['y'])
    width, height = int(prediction['width']), int(prediction['height'])
    class_name = prediction['class']

    x1 = x - width // 2
    y1 = y - height // 2
    x2 = x + width // 2
    y2 = y + height // 2

    cv2.rectangle(image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(image, class_name, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

# Show the image
plt.figure(figsize=(8, 8))
plt.imshow(image)
plt.axis('off')
plt.show()